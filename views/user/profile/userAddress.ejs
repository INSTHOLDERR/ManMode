<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/logo.ico" type="image/x-icon">
    <title>ManMode</title>
    <link rel="stylesheet" href="./css1/home.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

</head>


<body>

    <%- include('../common-ele/nav') %>


    <main class="container mt-5">
        <h2>Manage Addresses</h2>
        <div class="d-flex gap-3 mb-4">
            <button class="btn btn-primary" id="viewAddressesBtn">View Addresses</button>
            <button class="btn btn-success" id="addAddressBtn">Add Address</button>
        </div>

  
        <div id="viewAddressesDiv" style="display: block;">
            <h3>Your Addresses</h3>

        </div>

 
        <div id="addAddressDiv" style="display: none;">
            <h3 id="formTitle">Add New Address</h3>
            <form id="addAddressForm">
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" placeholder="Enter your name">
                </div>
                <div class="mb-3">
                    <label for="phone" class="form-label">Phone Number</label>
                    <input type="text" class="form-control" id="phone" placeholder="Enter your phone number">
                </div>
                <div class="mb-3">
                    <label for="pincode" class="form-label">Pincode</label>
                    <input type="text" class="form-control" id="pincode" placeholder="Enter pincode">
                </div>
                <div class="mb-3">
                    <label for="locality" class="form-label">Locality</label>
                    <input type="text" class="form-control" id="locality" placeholder="Enter locality">
                </div>
                <div class="mb-3">
                    <label for="address" class="form-label">Address</label>
                    <textarea class="form-control" id="address" placeholder="Enter address"></textarea>
                </div>
                <div class="mb-3">
                    <label for="city" class="form-label">City/District/Town</label>
                    <input type="text" class="form-control" id="city" placeholder="Enter city/district/town">
                </div>
                <div class="mb-3">
                    <label for="state" class="form-label">State</label>
                    <select class="form-select" id="state">
                        <option value="" selected disabled>Select State</option>
                        <option value="andhra_pradesh">Andhra Pradesh</option>
                        <option value="arunachal_pradesh">Arunachal Pradesh</option>
                        <option value="assam">Assam</option>
                        <option value="bihar">Bihar</option>
                        <option value="chhattisgarh">Chhattisgarh</option>
                        <option value="goa">Goa</option>
                        <option value="gujarat">Gujarat</option>
                        <option value="haryana">Haryana</option>
                        <option value="himachal_pradesh">Himachal Pradesh</option>
                        <option value="jharkhand">Jharkhand</option>
                        <option value="karnataka">Karnataka</option>
                        <option value="kerala">Kerala</option>
                        <option value="madhya_pradesh">Madhya Pradesh</option>
                        <option value="maharashtra">Maharashtra</option>
                        <option value="manipur">Manipur</option>
                        <option value="meghalaya">Meghalaya</option>
                        <option value="mizoram">Mizoram</option>
                        <option value="nagaland">Nagaland</option>
                        <option value="odisha">Odisha</option>
                        <option value="punjab">Punjab</option>
                        <option value="rajasthan">Rajasthan</option>
                        <option value="sikkim">Sikkim</option>
                        <option value="tamil_nadu">Tamil Nadu</option>
                        <option value="telangana">Telangana</option>
                        <option value="tripura">Tripura</option>
                        <option value="uttar_pradesh">Uttar Pradesh</option>
                        <option value="uttarakhand">Uttarakhand</option>
                        <option value="west_bengal">West Bengal</option>
                        <option value="andaman_nicobar">Andaman and Nicobar Islands</option>
                        <option value="chandigarh">Chandigarh</option>
                        <option value="dadra_nagar_haveli">Dadra and Nagar Haveli</option>
                        <option value="daman_diu">Daman and Diu</option>
                        <option value="delhi">Delhi</option>
                        <option value="lakshadweep">Lakshadweep</option>
                        <option value="puducherry">Puducherry</option>
                        
                    </select>
                </div>
                <div class="mb-3">
                    <label for="landmark" class="form-label">Landmark</label>
                    <input type="text" class="form-control" id="landmark" placeholder="Enter landmark">
                </div>
                <div class="mb-3">
                    <label for="altPhone" class="form-label">Alternative Phone</label>
                    <input type="text" class="form-control" id="altPhone" placeholder="Enter alternative phone number">
                </div>
                <button type="submit" class="btn btn-primary" id="saveButton">Save Address</button>
            </form>
        </div>





    

        <div id="EditAddressDiv" style="display: none;">
            <h3 id="formTitle">Edit Address</h3>
            <form id="editaddressForm">
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" placeholder="Enter your name">
                </div>
                <div class="mb-3">
                    <label for="phone" class="form-label">Phone Number</label>
                    <input type="text" class="form-control" id="phone" placeholder="Enter your phone number">
                </div>
                <div class="mb-3">
                    <label for="pincode" class="form-label">Pincode</label>
                    <input type="text" class="form-control" id="pincode" placeholder="Enter pincode">
                </div>
                <div class="mb-3">
                    <label for="locality" class="form-label">Locality</label>
                    <input type="text" class="form-control" id="locality" placeholder="Enter locality">
                </div>
                <div class="mb-3">
                    <label for="address" class="form-label">Address</label>
                    <textarea class="form-control" id="address" placeholder="Enter address"></textarea>
                </div>
                <div class="mb-3">
                    <label for="city" class="form-label">City/District/Town</label>
                    <input type="text" class="form-control" id="city" placeholder="Enter city/district/town">
                </div>
                <div class="mb-3">
                    <label for="state" class="form-label">State</label>
                    <select class="form-select" id="state">
                        <option value="" selected disabled>Select State</option>
                        <option value="state1">State 1</option>
                        <option value="state2">State 2</option>
                        <option value="state3">State 3</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="landmark" class="form-label">Landmark</label>
                    <input type="text" class="form-control" id="landmark" placeholder="Enter landmark">
                </div>
                <div class="mb-3">
                    <label for="altPhone" class="form-label">Alternative Phone</label>
                    <input type="text" class="form-control" id="altPhone" placeholder="Enter alternative phone number">
                </div>
                <button type="submit" class="btn btn-primary" id="updateButton">Update Address</button>
            </form>
        </div>


    </main>








    <%- include('../common-ele/footer') %>

    <script>



        document.addEventListener('DOMContentLoaded', () => {
            const userIcon = document.getElementById('userIcon');
            const dropdown = document.getElementById('userDropdown');

            userIcon.addEventListener('click', () => {
                dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
            });

            document.addEventListener('click', (event) => {
                if (!userIcon.contains(event.target) && !dropdown.contains(event.target)) {
                    dropdown.style.display = 'none';
                }
            });
        });




        const viewAddressesBtn = document.getElementById('viewAddressesBtn');
        const addAddressBtn = document.getElementById('addAddressBtn');
        const viewAddressesDiv = document.getElementById('viewAddressesDiv');
        const addAddressDiv = document.getElementById('addAddressDiv');
        const editAddressDiv = document.getElementById('EditAddressDiv');
        const formTitle = document.getElementById('formTitle');
        const addaddressForm = document.getElementById('addAddressForm');
        const editaddressForm = document.getElementById('editAddressForm');

        let editingAddress = null;

        viewAddressesBtn.addEventListener('click', () => {
            viewAddressesDiv.style.display = 'block';
            addAddressDiv.style.display = 'none';
            editAddressDiv.style.display = 'none'
        });

        addAddressBtn.addEventListener('click', () => {
            addaddressForm.reset();
            editingAddress = null;
            addAddressDiv.style.display = 'block';
            viewAddressesDiv.style.display = 'none';
            editAddressDiv.style.display = 'none'
        });



        addaddressForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const addressData = {
                name: document.getElementById("name").value,
                phone: document.getElementById("phone").value,
                zipCode: document.getElementById("pincode").value,
                locality: document.getElementById("locality").value,
                address: document.getElementById("address").value,
                city: document.getElementById("city").value,
                state: document.getElementById("state").value,
                landmark: document.getElementById("landmark").value || null,
                altPhone: document.getElementById("altPhone").value || null,
            };

            console.log("Address Data:", addressData);

            try {
                const response = await fetch("/add-user-address", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ addressData }),
                });

                const result = await response.json();
                console.log(result);


                if (response.ok) {
                    alert("Address saved successfully!");
                } else {
                    alert(result.error || "Failed to save address");
                }
            } catch (error) {
                console.error("Error saving address:", error);
            }

            viewAddressesDiv.style.display = "block";
            addAddressDiv.style.display = "none";
        });




        document.addEventListener("DOMContentLoaded", async () => {
            const viewAddressesDiv = document.getElementById("viewAddressesDiv");
            const editAddressDiv = document.getElementById("EditAddressDiv");
            const editAddressForm = document.getElementById("editaddressForm");
            const addressContainer = document.createElement("div");
            addressContainer.classList.add("address-container");

            async function fetchAddresses() {
                try {
                    const response = await fetch("/get-user-addresses");
                    const result = await response.json();

                    console.log("Fetched Addresses:", result);

                    if (response.ok) {
                        addressContainer.innerHTML = "";

                        if (result.addresses.length === 0) {
                            addressContainer.innerHTML = "<p>No addresses found.</p>";
                        } else {
                            result.addresses.forEach((address) => {
                                const addressCard = document.createElement("div");
                                addressCard.className = "card mb-3";

                                addressCard.innerHTML = `
                            <div class="card-body">
                                <p><strong>Name:</strong> ${address.name}</p>
                                <p><strong>Phone:</strong> ${address.phone}</p>
                                <p><strong>Address:</strong> ${address.address}, ${address.locality}, ${address.city}, ${address.state} - ${address.zipCode}</p>
                                ${address.landmark ? `<p><strong>Landmark:</strong> ${address.landmark}</p>` : ""}
                                ${address.altPhone ? `<p><strong>Alternate Phone:</strong> ${address.altPhone}</p>` : ""}
                                <button class="btn btn-warning btn-sm edit-btn" data-id="${address._id}">Edit</button>
                                <button class="btn btn-danger btn-sm delete-btn" data-id="${address._id}">Delete</button>
                            </div>
                        `;

                                addressContainer.appendChild(addressCard);
                            });

                        
                            addressContainer.querySelectorAll(".edit-btn").forEach((btn) => {
                                btn.addEventListener("click", async (event) => {
                                    const addressId = event.target.dataset.id;
                                    console.log("Edit address with ID:", addressId);

                                    try {
                                        const response = await fetch(`/get-user-address/${addressId}`); 
                                        const address = await response.json();

                                        if (response.ok) {
                                      
                                            editAddressForm.name.value = address.name || "";
                                            editAddressForm.phone.value = address.phone || "";
                                            editAddressForm.pincode.value = address.zipCode || "";
                                            editAddressForm.locality.value = address.locality || "";
                                            editAddressForm.address.value = address.address || "";
                                            editAddressForm.city.value = address.city || "";
                                            editAddressForm.state.value = address.state || "";
                                            editAddressForm.landmark.value = address.landmark || "";
                                            editAddressForm.altPhone.value = address.altPhone || "";

                                   
                                            editAddressDiv.style.display = "block";
                                            viewAddressesDiv.style.display = "none";
                                            addAddressDiv.style.display = "none";


                                            const updateButton = document.getElementById("updateButton");
                                            updateButton.onclick = async (e) => {
                                                e.preventDefault();

                                                const updatedAddress = {
                                                    name: editAddressForm.name.value,
                                                    phone: editAddressForm.phone.value,
                                                    zipCode: editAddressForm.pincode.value,
                                                    locality: editAddressForm.locality.value,
                                                    address: editAddressForm.address.value,
                                                    city: editAddressForm.city.value,
                                                    state: editAddressForm.state.value,
                                                    landmark: editAddressForm.landmark.value,
                                                    altPhone: editAddressForm.altPhone.value,
                                                };

                                                try {
                                                    const updateResponse = await fetch(`/update-user-address/${addressId}`, {
                                                        method: "PUT",
                                                        headers: {
                                                            "Content-Type": "application/json",
                                                        },
                                                        body: JSON.stringify(updatedAddress),
                                                    });

                                                    const updateResult = await updateResponse.json();
                                                    if (updateResponse.ok) {
                                                        alert("Address updated successfully!");
                                                        editAddressDiv.style.display = "none";
                                                        await fetchAddresses();
                                                    } else {
                                                        alert(updateResult.error || "Failed to update the address.");
                                                    }
                                                } catch (error) {
                                                    console.error("Error updating address:", error);
                                                    alert("An error occurred while updating the address.");
                                                }
                                            };
                                        } else {
                                            alert(address.error || "Failed to fetch address details.");
                                        }
                                    } catch (error) {
                                        console.error("Error fetching address details:", error);
                                        alert("An error occurred while fetching address details.");
                                    }
                                });
                            });




                            addressContainer.querySelectorAll(".delete-btn").forEach((btn) => {
                                btn.addEventListener("click", async (event) => {
                                    const addressId = event.target.dataset.id;
                                    console.log("Delete address with ID:", addressId);

                                    const confirmDelete = confirm("Are you sure you want to delete this address?");
                                    if (!confirmDelete) return;

                                    try {
                                        const response = await fetch(`/delete-user-address/${addressId}`, {
                                            method: "DELETE",
                                            headers: {
                                                "Authorization": `Bearer ${localStorage.getItem("token")}`,
                                            },
                                        });

                                        const result = await response.json();

                                        if (response.ok) {
                                            alert(result.message || "Address deleted successfully.");
                                            event.target.closest(".card").remove(); 
                                        } else {
                                            alert(result.error || "Failed to delete the address.");
                                        }
                                    } catch (error) {
                                        console.error("Error deleting address:", error);
                                        alert("An error occurred while deleting the address.");
                                    }
                                });
                            });



                        }
                    } else {
                        alert(result.error || "Failed to fetch addresses.");
                    }
                } catch (error) {
                    console.error("Error fetching addresses:", error);
                    alert("An error occurred while fetching addresses.");
                }
            }

            document.getElementById("viewAddressesBtn").addEventListener("click", async () => {
                viewAddressesDiv.style.display = "block";
                editAddressDiv.style.display = "none";
                await fetchAddresses();
            });

            viewAddressesDiv.appendChild(addressContainer);
        });




    </script>
<script src="/js/nav.js"></script>
</body>

</html>