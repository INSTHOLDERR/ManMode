<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/logo.ico" type="image/x-icon">
    <title>ManMode</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- SweetAlert2 -->
    <style>
        #resend-otp {
            display: inline-block;
            margin-top: 10px;
            color: #007bff;
            text-decoration: underline;
            cursor: pointer;
            font-size: 14px;
        }

        #resend-otp:hover {
            color: #0056b3;
        }

        #otp-input {
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <div class="register-container">
        <div class="register-left-section">
            <div class="register-left-section-inside"></div>
        </div>

        <div class="register-right-section">
            <div class="register-logo">
                <a href="/" class="register-logo-text" style="text-decoration: none;"> 
                    ManMode
                </a>
            </div>

            <div class="register-header">
                <h2 class="register-title">Welcome</h2>
                <p class="register-subtitle">Login</p>
            </div>

            <form id="login-form" class="register-form">
         
                <div class="register-form-group">
                    <input type="email" class="register-input-field" id="email" name="email" placeholder="Enter your email" required>
                </div>

     
                <div class="register-form-group">
                    <div class="register-password-wrapper">
                        <input type="password" class="register-input-field" id="password" name="password" placeholder="Enter your password" required>
                        <button type="button" onclick="togglePassword('password', this)" class="register-toggle-password-button">Show</button>
                    </div>
                </div>
                <a href="/forgot-password-email" class="forgot-password-link">Forgot Password?</a>

       
                <button type="submit" class="register-button" id="submit-button">Login</button>
            </form>

            <div class="register-divider">Or Login with</div>

            <div class="register-social-buttons">
                <a href="/auth/google" class="register-social-button" style="text-decoration: none; color: black;">
                    <svg viewBox="0 0 24 24" width="24" height="24">
                        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" />
                        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" />
                        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" />
                        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" />
                    </svg>
                    Google
                </a>
            </div>

            <div class="register-signup-prompt">
                Don't have an account? <a href="/register" class="register-signup-link">Sign Up</a>
            </div>
        </div>
    </div>

    <script>
     
        function togglePassword(fieldId, button) {
            const passwordField = document.getElementById(fieldId);
            const type = passwordField.type === 'password' ? 'text' : 'password';
            passwordField.type = type;
            button.textContent = type === 'password' ? 'Show' : 'Hide';
        }

        // Validating
        function validateFormFields() {
            const email = document.getElementById("email").value.trim();
            const password = document.getElementById("password").value.trim();

            if (!email || !password) {
                Swal.fire({
                    title: "Error!",
                    text: "All fields are required.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return false;
            }

            if (password.length < 6) {
                Swal.fire({
                    title: "Error!",
                    text: "Password must be at least 6 characters long.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return false;
            }

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                Swal.fire({
                    title: "Error!",
                    text: "Please enter a valid email address.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
                return false;
            }

            return true;
        }

        // Submit login form
        document.getElementById('login-form').addEventListener('submit', async (event) => {
    event.preventDefault();

    if (!validateFormFields()) return;

    try {
        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());
        console.log(data);
       
        const loginResponse = await fetch('/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });


        if (loginResponse.ok) {
            const loginResult = await loginResponse.json(); 
            console.log("HELLO", loginResult);

            Swal.fire({
                title: 'Success!',
                text: 'Login successful.',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = '/userhome';
            });
        } else {
       
            const loginResult = await loginResponse.json();
            Swal.fire({
                title: 'Error!',
                text: loginResult.message || 'Login failed. Please check your credentials.',
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        Swal.fire({
            title: 'Error!',
            text: 'An unexpected error occurred. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        console.error('Error:', error);
    }
});

    </script>
</body>

</html>
