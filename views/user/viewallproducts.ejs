<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="/images/logo.ico" type="image/x-icon">
  <title>ManMode</title>
  <link rel="stylesheet" href="./css1/home.css">
  <link rel="stylesheet" href="./css1/viewproduct.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    .advanced-search {
      display: flex;
      align-items: center;
      margin-right: 20px;
    }

    .advanced-search select {
      padding: 5px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <%- include('./common-ele/nav') %>

  <section style="display: flex; justify-content: end; margin: 20px 50px;">
    <div class="advanced-search" style="width: 200px;">
      <select id="searchSort" class="form-select">
        <option value="">Select Sort</option>
        <option value="priceLowToHigh">Price: Low to High</option>
        <option value="priceHighToLow">Price: High to Low</option>
        <option value="averageRating">High Rating to Low</option>
        <option value="newArrivals">New Arrivals</option>
        <option value="aToZ">A - Z</option>
        <option value="zToA">Z - A</option>
      </select>
    </div>
  </section>
  <section>
  <section style="display: flex; justify-content: center; margin-top: 20px;">
    <div style="width: 70%;">
      <section class="similar-products-section">
        <h2>Products:</h2>
        <div class="products-container" id="similarProductsContainer">
          <p>Loading products...</p>
        </div>
      </section>
    </div>

    </section>
    <div  style="display: flex; justify-content: center; margin: 50px 0px; ">

      <button id="prevPage" class="btn btn-primary mx-2">Previous</button>
      <span id="currentPage" style="margin: 0 10px;">Page 1</span>
      <button id="nextPage" class="btn btn-primary mx-2">Next</button>

    </div>
   
  </section>

  <%- include('./common-ele/footer') %>
  <script>
    let products = [];
    let currentPage = 1;
    const limit = 12;

    document.getElementById("searchSort").addEventListener("change", function() {
      const sortOption = this.value;
      sortProducts(sortOption);
    });

    function sortProducts(sortOption) {
      let sortedProducts = [...products];

      switch (sortOption) {
        case "priceLowToHigh":
          sortedProducts.sort((a, b) => a.offerPrice - b.offerPrice);
          break;
        case "priceHighToLow":
          sortedProducts.sort((a, b) => b.offerPrice - a.offerPrice);
          break;
        case "averageRating":
          sortedProducts.sort((a, b) => b.averageRating - a.averageRating);
          break;
        case "newArrivals":
          sortedProducts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
          break;
        case "aToZ":
          sortedProducts.sort((a, b) => a.name.localeCompare(b.name));
          break;
        case "zToA":
          sortedProducts.sort((a, b) => b.name.localeCompare(a.name));
          break;
      }

      disProducts(sortedProducts);
    }

    async function fetchProducts(page) {
      try {
        const response = await fetch(`/getallproducts?page=${page}&limit=${limit}`);
        const data = await response.json();

        if (response.ok) {
          products = data.products;
          disProducts(products);
          document.getElementById("currentPage").innerText = `Page ${data.currentPage}`;
          togglePaginationButtons(data.currentPage, data.totalPages);
        } else {
          console.error("Error fetching products:", data.message);
        }
      } catch (error) {
        console.error("Error:", error);
      }
    }

    function disProducts(products) {
      const container = document.getElementById("similarProductsContainer");
      container.innerHTML = "";

      if (!products.length) {
        container.innerHTML = "<p>No products found.</p>";
        return;
      }

      products.forEach(product => {
        const productCard = document.createElement("div");
        productCard.classList.add("product-card");

        const productLink = document.createElement("a");
        productLink.href = `/viewuser?id=${product._id}`;
        productLink.classList.add("product-link");

        const img = document.createElement("img");
        img.src = `http://manmode.uno/${product.images[0].replace('uploads', '')}`;
        img.alt = product.name || "No name available";
        img.classList.add("product-image");

        const name = document.createElement("h3");
        name.classList.add("product-name");
        name.innerText = product.name || "No name available";

        const price = document.createElement("p");
        price.classList.add("product-price");
        price.innerText = `â‚¹${product.offerPrice.toFixed(2)}`;

        productLink.append(img, name, price);
        productCard.appendChild(productLink);
        container.appendChild(productCard);
      });
    }

    function togglePaginationButtons(currentPage, totalPages) {
      document.getElementById("prevPage").disabled = currentPage <= 1;
      document.getElementById("nextPage").disabled = currentPage >= totalPages;
    }

    document.getElementById("prevPage").addEventListener("click", () => {
      if (currentPage > 1) {
        currentPage--;
        fetchProducts(currentPage);
      }
    });

    document.getElementById("nextPage").addEventListener("click", () => {
      currentPage++;
      fetchProducts(currentPage);
    });

    fetchProducts(currentPage);
  </script>

  <script src="/js/nav.js"></script>
</body>
</html>
